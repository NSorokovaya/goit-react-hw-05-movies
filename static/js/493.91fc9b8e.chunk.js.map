{"version":3,"file":"static/js/493.91fc9b8e.chunk.js","mappings":"8LA4CA,UAxCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAgBN,GAASO,MAAK,SAAAC,GAAI,OAChCJ,EAAaI,EAAKC,KAAKC,OAAO,EAAG,IADD,GAKnC,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACX,KAGF,yBACyB,KAAb,OAATG,QAAS,IAATA,OAAA,EAAAA,EAAWW,QAAX,2DAGC,wBACGX,EAAUY,KAAI,SAAAC,GACb,OACE,2BACE,gBAAKC,MAAM,KACTC,IAAG,yCACkCF,EAAMG,cAE3CC,IAAI,UAEN,uBAAIJ,EAAMK,QACV,uCAAeL,EAAMM,eARdN,EAAMO,GAWlB,OAKV,C,+LCxCDC,EAAAA,EAAAA,SAAAA,QAAA,+BACA,IAAMC,EAAO,4CAEAC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,6BAAgCC,IAD9B,cACnBE,EADmB,yBAElBA,EAASC,KAAKC,QAAQd,KAAI,YAC/B,MAAO,CACLQ,GAFgD,EAAhBA,GAGhCO,MAHgD,EAAZA,MAKvC,KAPwB,2CAAH,qDAUXC,EAAY,mCAAG,WAAMC,GAAN,uFACHR,EAAAA,EAAAA,IAAA,uBACLC,EADK,iCAC2BO,EAD3B,gCADG,cACpBL,EADoB,yBAInBA,EAASC,KAAKC,QAAQd,KAAI,YAC/B,MAAO,CACLQ,GAF8C,EAAfA,GAG/BO,MAH8C,EAAXA,MAKtC,KATyB,2CAAH,sDAYZG,EAAe,mCAAG,WAAMjC,GAAN,uFACNwB,EAAAA,EAAAA,IAAA,iBACXxB,GADW,OACDyB,EADC,oBADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOftB,EAAe,mCAAG,WAAMN,GAAN,uFACNwB,EAAAA,EAAAA,IAAA,iBACXxB,EADW,mBACOyB,EADP,oBADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfM,EAAe,mCAAG,WAAMlC,GAAN,uFACNwB,EAAAA,EAAAA,IAAA,iBACXxB,EADW,mBACOyB,EADP,2BADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,qD","sources":["pages/Cast.jsx","services/movieApi.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'services/movieApi';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [movieCast, setMovieCast] = useState([]);\n\n  useEffect(() => {\n    try {\n      getMovieCredits(movieId).then(resp =>\n        setMovieCast(resp.cast.splice(0, 10))\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  return (\n    <div>\n      {movieCast?.length === 0 ? (\n        `We don't have any information about cast for this movie`\n      ) : (\n        <ul>\n          {movieCast.map(actor => {\n            return (\n              <li key={actor.id}>\n                <img width=\"50\"\n                  src={\n                     `https://image.tmdb.org/t/p/w500${actor.profile_path}`\n                  }\n                  alt=\"cast\"\n                />\n                <p>{actor.name}</p>\n                <p>Character: {actor.character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\nconst API_KEY = `?api_key=8342d698457bbb39c567b3c209d2c795`;\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day${API_KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data.results.map(({id, title}) => {\n    return {\n      id,\n      title,\n    }\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};"],"names":["movieId","useParams","useState","movieCast","setMovieCast","useEffect","getMovieCredits","then","resp","cast","splice","error","console","log","length","map","actor","width","src","profile_path","alt","name","character","id","axios","API_KEY","getTrending","response","data","results","title","searchMovies","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}